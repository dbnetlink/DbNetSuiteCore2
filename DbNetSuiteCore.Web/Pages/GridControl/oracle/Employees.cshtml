@page
@using DbNetSuiteCore.Enums
@using DbNetSuiteCore.Models

<p data-summary>At it's most basic you can generate a grid by simply <b>specifying</b> the connection alias and the name of the table or view. Default functionality includes a search box that will perform a wildcard search against all string based columns in the dataset, the ability to sort on any column by clicking on the heading, a copy page button and an option to export the data in HTML, Excel, CSV and PDF formats.</p>
@{
    var employeeGrid = new GridModel(DataSourceType.Oracle, "Northwind(oracle)", "Employees") {  };
    employeeGrid.ViewDialog = new ViewDialog() { MaxWidth = 300, MaxHeight = 400, LayoutColumns = 1 };

    employeeGrid.Columns = new List<GridColumn>()
    {
        new GridColumn("Employee_ID") { PrimaryKey = true},
        new GridColumn("LastName"),
        new GridColumn("FirstName"),
        new GridColumn("Title"),
        new GridColumn("Title_Of_Courtesy"),
        new GridColumn("BirthDate"),
        new GridColumn("HireDate"),
        new GridColumn("Address"),
        new GridColumn("City") { Filter = FilterType.Distinct},
        new GridColumn("Region") { Filter = FilterType.Distinct},
        new GridColumn("Postal_Code"),
        new GridColumn("Country") { Filter = FilterType.Distinct},
        new GridColumn("Home_Phone"),
        new GridColumn("Extension"),
        //new GridColumn("Photo") { Image = new Image(ImageType.Jpeg, 50)},
        new GridColumn("Notes") {MaxChars = 50},
        new GridColumn("Reports_To") {Lookup = new Lookup("employees","Employee_ID","LastName || ', ' || FirstName"), Filter = FilterType.Default}
    };

    @(await new DbNetSuiteCore.GridControl(HttpContext).Render(employeeGrid))
}