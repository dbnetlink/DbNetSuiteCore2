@page
@using DbNetSuiteCore.Enums
@using DbNetSuiteCore.Web.Enums
@using DbNetSuiteCore.Helpers
@using DbNetSuiteCore.Models
@{
    var invoiceColumns = new List<GridColumn>
    {
        new GridColumn("Product_Id", "Product Name") {Lookup = new Lookup("Products", "Product_Id", "Product_name")}
    };

    for (var i =1; i<=12; i++)
    {
        var monthName = new DateTime(2024, i, 1).ToString("MMMM");
        var column = new GridColumn($"(case when EXTRACT(month FROM order_date) = {i} then Quantity else 0 end) as {monthName.ToLower()}", monthName) { Aggregate = AggregateType.Sum, Format = "####0" };
        invoiceColumns.Add(column);
    }

    var invoiceGrid = new GridModel(DataSourceType.PostgreSql, "Northwind(Postgresql)", "Order_Details join Orders on Orders.Order_Id = Order_Details.Order_id");
    invoiceGrid.Columns = invoiceColumns;
    invoiceGrid.ClientEvents[GridClientEvent.CellTransform] = "highlightQuantity";
    @(await new DbNetSuiteCore.GridControl(HttpContext).Render(invoiceGrid))
}

<script>
    function highlightQuantity(gridControl, args) {
        switch (args.columnName.toLowerCase()) {
            case "ProductName":
                break;
            default:
                var qty = Number(args.cell.dataset.value)
                if (qty > 100) {
                    args.cell.style = 'background-color:salmon'
                }
                break;
        }
    }
</script>