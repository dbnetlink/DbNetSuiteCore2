@page
@using DbNetSuiteCore.Enums
@using DbNetSuiteCore.Helpers
@using DbNetSuiteCore.Models

@{
    <p style="width:700px; padding-bottom:20px">Only the pages in the <b>json</b> and <b>sqlite</b> folders are guaranteed to run without changes. For other databases you will need to add your own connection strings to the <b>appsettings.json</b> file and update the connection aliases in the relevant <b>BrowseDb.cshtml.cs</b> file</p>
    var columns = new List<GridColumnModel>()
    {
        new GridColumnModel(FileSystemColumn.Name.ToString())
    };
    var gridModel = new GridModel(DataSourceType.FileSystem, "/") { Url = "../Pages", FixedFilter = "(IsDirectory = 1 or Name like '%.cshtml') and Name not in ('Shared','_ViewStart.cshtml')" };
    gridModel.Columns = columns;
    gridModel.ClientEvents[ClientEvent.CellRendered] = "createLink";

    @(await new DbNetSuiteCore.GridControl(HttpContext).Render(gridModel));
}

<script>
    function createLink(gridControl, args) {
        var tbody = args.cell.closest("tbody")
        var url = tbody.dataset.url.toString().toLowerCase().replace('../pages', '')
        
        switch (args.columnName) 
        { 
            case "Name":
                var name = args.cell.dataset.value.toString()
                if (name.endsWith(".cshtml") && name.startsWith("_") == false) {
                    args.cell.innerHTML = `<a target='_blank' href='${window.location.origin}${url}/${name.replace(".cshtml", "")}'>${name.replace(".cshtml", "")}</a>`
                }
                break;
        }
    }
</script>
