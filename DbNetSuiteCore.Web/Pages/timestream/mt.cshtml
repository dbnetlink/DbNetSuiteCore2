@page
@using DbNetSuiteCore.Enums
@using DbNetSuiteCore.Helpers
@using DbNetSuiteCore.Models

@{
    var mt1Columns = new List<GridColumn>
    {
        new GridColumn("SerialNumber", "Serial No."),
        new GridColumn("measure_name", "Measure"),
        new GridColumn("time", "Timestamp"),
        new GridColumn("gpModel", "GP Model"),
        new GridColumn("lpModel", "LP Model"),
        new GridColumn("refrigerantType", "Refrigerant Type"),
        new GridColumn("wifiPassword", "WI-FI Password"),
        new GridColumn("model", "Model"),
        new GridColumn("firmwareVersion", "Firmware Vn"),
        new GridColumn("numCompressors", "No. Compressors")
    };

    var mt2Columns = new List<GridColumn>
    {
        new GridColumn("SerialNumber", "Serial No."),
        new GridColumn("measure_name", "Measure"),
        new GridColumn("time", "Timestamp"),

        new GridColumn("t1", "Load Return Temperature"),
        new GridColumn("t2", "Load Outlet Temperature"),
        new GridColumn("t4", "Ground Return Temperature"),
        new GridColumn("t5", "Ground Outlet Temperature"),
        new GridColumn("t7", "Discharge Temp") { InitialSortOrder = SortOrder.Desc},
        new GridColumn("t9", "Weather Compensation Temperature Probe"),

    @*
        new GridColumnModel("t3", "Load Outlet Temperatur For Twin Compressor Unit"),
        new GridColumnModel("t6", "Ground Outlet Temperatur For Twin Compressor Unit"),
        new GridColumnModel("t8", "Discharge Temperature Twin Compressor"),
        *@

        new GridColumn("p1", "Load Side Pressure"),
        new GridColumn("p2", "Ground Side Pressure"),
        new GridColumn("p3", "Suction Pipe Pressure"),
        new GridColumn("p5", "Discharge Pipe Pressure"),
    @*
        new GridColumnModel("p4", "SuctionPipeOnTwinCompressor"),
        new GridColumnModel("p6", "Discharge Pipe Twin Compressor"),
        *@

        new GridColumn("state", "State Of The Heat Pump"),
        new GridColumn("comp1", "State Of Compressor 1"),
        new GridColumn("comp2", "State Of Compressor 2"),
        new GridColumn("reason", "Reason For Logging"),
        new GridColumn("numFaults", "Number Of Faults"),
        new GridColumn("faultCode", "Fault Code"),

        new GridColumn("lpState", "Load Pump State"),
        new GridColumn("gpState", "GroundPumpState"),
        new GridColumn("pulse1", "Pulse Input Value 1"),
        new GridColumn("pulse2", "Pulse Input Value 2"),

        new GridColumn("cop", "Coefficient Of Performance"),
        new GridColumn("scop", "Seasonal Coefficient Of Performance"),

        new GridColumn("deltaLoad", "Load Side Differential"),
        new GridColumn("deltaGround", "Ground Side Differential"),

        new GridColumn("runHours1", "Run Hours 1"),
        new GridColumn("runHours2", "Run Hours 2")
    };

   

    var tabs = new List<string> { "MT2", "MT1"};
}

<ul class="nav nav-tabs">
    @{
        foreach (string tab in tabs)
        {
            <li class="nav-item">
                <button class="nav-link @(tab == tabs.First() ? "active" : string.Empty)" id="@(tab)-tab" data-bs-toggle="tab" data-bs-target="#@(tab)-pane" type="button" role="tab" aria-controls="@tab" aria-selected="true">@tab</button>
            </li>
        }
    }
</ul>

<div class="tab-content" id="tabContent">
    @foreach (string tab in tabs)
    {
        <div class="tab-pane fade @(tab == tabs.First() ? "show active" : string.Empty)" id="@(tab)-pane" role="tabpanel" aria-labelledby="@(tab)-tab">
            @{
                switch (tab)
                {
                    case "MT2":
                        @(await new DbNetSuiteCore.GridControl(HttpContext).Render(new GridModel(DataSourceType.Timestream, "AWS", "Kensa-Development.MT2_IN_RAW") { Columns = mt2Columns, PageSize = 10 }))
                        break;
                    case "MT1":
                        @(await new DbNetSuiteCore.GridControl(HttpContext).Render(new GridModel(DataSourceType.Timestream, "AWS", "Kensa-Development.MT1_IN_REG") { Columns = mt1Columns }))
                        break;
                }
            }

        </div>
    }
</div>