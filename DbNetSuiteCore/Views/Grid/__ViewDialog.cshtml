@using DbNetSuiteCore.Helpers;
@using DbNetSuiteCore.Constants;
@using DbNetSuiteCore.ViewModels;
@model GridViewModel

<dialog class="view-dialog dialog border-solid border-2 border-stone-200 rounded-md bg-neutral-100" style="max-width:@(Model.ViewDialog.MaxWidth.HasValue ? $"{Model.ViewDialog.MaxWidth.Value}px" : null)" id="@Model.ViewDialogId">
    <div class="flex flex-col">
        <nav class="dialog-nav">
            <div class="flex flex-row justify-between items-center border-solid border border-stone-200 bg-stone-200 rounded-md m-1 p-1">
                <div>
                    <span class="font-bold text-xl text-cyan-800">View</span>
                </div>
                <div>
                    <button button-type="close" type="button" title="Close">@IconHelper.Close()</button>
                </div>
            </div>
        </nav>
        <div class="flex view-dialog-content" style="@(Model.ViewDialog.MaxHeight.HasValue ? $"max-height:{Model.ViewDialog.MaxHeight.Value}px;overflow:scroll" : null)"></div>
        <div class="flex flex-row justify-between items-center border-solid border border-slate-200 bg-slate-50 rounded-md m-1 p-1">
            <div>
                <button type="button" button-type="previous" title="Previous row">@IconHelper.Previous()</button>
                <button type="button" button-type="next" title="Next row">@IconHelper.Next()</button>
                <input type="hidden" name="@TriggerNames.ViewDialogContent" hx-post="@Model.SubmitUrl" hx-target="#@(Model.ViewDialogId) .view-dialog-content" hx-indicator="previous .htmx-indicator" hx-swap="innerHTML" hx-trigger="changed" />
            </div>
            <div>
                <button type="button" button-type="close">Close</button>
            </div>
        </div>
    </div>
</dialog>