@model DbNetSuiteCore.ViewModels.SelectViewModel
@using System.Data
@using DbNetSuiteCore.Helpers
@using DbNetSuiteCore.Models
@using DbNetSuiteCore.Enums
@using DbNetSuiteCore.Constants
@using DbNetSuiteCore.Extensions
@using Microsoft.AspNetCore.Html
@using System.Text.Json
@{
    var rowNumber = 0;
    <select style="display:none">
        @if (Model.Rows.Count > 0 && string.IsNullOrEmpty(Model.SelectModel.EmptyOption) == false)
        {
            <option value="">@Model.SelectModel.EmptyOption</option>
        }

        @if (Model.Rows.Count > 0 && Model.SelectModel.IsGrouped)
        {
            @OpenOptionGroup(Model.Rows[0])
        }

        @foreach (DataRow row in Model.Rows)
        {
            @if (rowNumber > 0 && Model.ChangeInGroup(rowNumber))
            {
                @CloseOptionGroup()
                @OpenOptionGroup(row)
            }
            <option value="@Model.Value(row)" @(rowNumber == 0 && Model.SelectFirstOption ? "selected" : null) @RazorHelper.DataAttributes(row, Model.SelectModel)>@Model.Description(row)</option>
            rowNumber++;
        }
        @if (Model.Rows.Count > 0 && Model.SelectModel.IsGrouped)
        {
            @CloseOptionGroup()
        }

        @if (Model.Rows.Count == 0 && Model.SelectModel.IsLinked == false)
        {
            <option disabled selected value="">@ResourceHelper.GetResourceString(ResourceNames.NoRecordsFound)</option>
        }
    </select>
}
@await Html.PartialAsync("Select/Hidden", Model.SelectModel)
@if (Model.SelectModel.IsLinked)
{
    <input type="hidden" name="@TriggerNames.ParentKey" hx-trigger="changed" hx-post="@Model.SubmitUrl" hx-target="closest div.target" hx-swap="innerHTML" hx-indicator="next .htmx-indicator" value="@Model.SelectModel.ParentKey" />
}
@functions {
    public HtmlString OpenOptionGroup(DataRow row)
    {
        return new HtmlString($"<optgroup label=\"{Model.GroupValue(row)}\">");
    }
    public HtmlString CloseOptionGroup()
    {
        return new HtmlString("</optgroup>");
    }
}